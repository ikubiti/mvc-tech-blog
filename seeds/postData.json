[
  {
    "id": 1,
    "title": "API Resources",
    "content": "<p><strong>Server-side APIs</strong> allow developers to access data that companies and organizations provide through URLs, or endpoints. Developers can create applications that make requests to these endpoints, which respond with the requested data. Developers can then use this data in their own applications.</p><p>However, when you're building an application that only has a front end, you can only use APIs that don't require CORS. <strong>Cross-Origin Resource Sharing</strong>, also known as <strong>CORS</strong>, is a mechanism that allows a server to restrict which other origins other than its own are permitted to load resources.</p><p>For security reasons, browsers restrict cross-origin requests initiated from scripts. For example, the <strong>Fetch API</strong> follows the <strong>same-origin policy</strong>, which means that a web application can only request resources from the same origin the application was loaded from unless the response includes the right headers.</p><p>Therefore, when you're building a front-end application, you will need to use APIs that don't require CORS.</p><h2>API List</h2><p>Here is a list of free APIs that don't require CORS:</p><ul><li><a href=\"https://www.reddit.com/dev/api\" rel=\"noopener noreferrer\" target=\"_blank\">reddit API</a></li><li><a href=\"https://www.youtube.com/yt/dev/api-resources.html\" rel=\"noopener noreferrer\" target=\"_blank\">Youtube API</a></li><li><a href=\"https://developer.linkedin.com/\" rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a></li><li><a href=\"https://developers.soundcloud.com/docs/api/guide\" rel=\"noopener noreferrer\" target=\"_blank\">Soundcloud</a></li><li><a href=\"https://www.mediawiki.org/wiki/API:Main_page\" rel=\"noopener noreferrer\" target=\"_blank\">Wikipedia</a></li><li><a href=\"https://developer.fandango.com/Rotten_Tomatoes\" rel=\"noopener noreferrer\" target=\"_blank\">Rotten Tomatoes</a></li><li><a href=\"https://www.flickr.com/services/api/\" rel=\"noopener noreferrer\" target=\"_blank\">flickr</a></li><li><a href=\"https://developers.pinterest.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Pinterest API</a></li><li><a href=\"https://developers.google.com/custom-search/\" rel=\"noopener noreferrer\" target=\"_blank\">Google Custom Search API</a></li><li><a href=\"https://www.tumblr.com/docs/en/api/v2\" rel=\"noopener noreferrer\" target=\"_blank\">Tumblr API</a></li><li><a href=\"https://developer.marvel.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Marvel API</a></li><li><a href=\"http://www.geonames.org/export/web-services.html\" rel=\"noopener noreferrer\" target=\"_blank\">GeoNames API</a></li><li><a href=\"http://www.omdbapi.com/\" rel=\"noopener noreferrer\" target=\"_blank\">OMDB</a></li><li><a href=\"http://www.zillow.com/howto/api/APIOverview.htm\" rel=\"noopener noreferrer\" target=\"_blank\">Zillow</a></li><li><a href=\"http://wiki.openstreetmap.org/wiki/API_v0.6\" rel=\"noopener noreferrer\" target=\"_blank\">Open Street Maps</a></li><li><a href=\"https://developers.google.com/maps/\" rel=\"noopener noreferrer\" target=\"_blank\">Google Maps</a></li><li><a href=\"https://api.giphy.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Giphy</a></li><li><a href=\"https://docs.jsfiddle.net/\" rel=\"noopener noreferrer\" target=\"_blank\">JSFiddle</a></li><li><a href=\"https://bitcoincharts.com/about/markets-api/\" rel=\"noopener noreferrer\" target=\"_blank\">Bitcoin Charts</a></li><li><a href=\"https://api.stackexchange.com/\" rel=\"noopener noreferrer\" target=\"_blank\">StackExchange API</a></li><li><a href=\"https://projects.propublica.org/nonprofits/api\" rel=\"noopener noreferrer\" target=\"_blank\">ProPublica NonProfit API</a></li><li><a href=\"https://developer.musixmatch.com/\" rel=\"noopener noreferrer\" target=\"_blank\">MusiXMatch</a></li><li><a href=\"https://www.wordsapi.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Words API</a></li></ul><h2>Examples</h2><p>Here are some examples on how to use the APIs using JSFiddle. Open the link in a new tab and then open the console to view the responses.</p><ul><li><a href=\"http://jsfiddle.net/danielvassallo87/6k2j5yqL/\" rel=\"noopener noreferrer\" target=\"_blank\">reddit</a></li><li><a href=\"http://jsfiddle.net/gautamadude/hmjjg/1/\" rel=\"noopener noreferrer\" target=\"_blank\">Wikipedia</a></li><li><a href=\"http://jsfiddle.net/danielvassallo87/42ozoqwf/\" rel=\"noopener noreferrer\" target=\"_blank\">Tumblr</a></li><li><a href=\"https://jsfiddle.net/adifah/ma2xb/\" rel=\"noopener noreferrer\" target=\"_blank\">GeoNames</a></li><li><a href=\"http://jsfiddle.net/potherca/765kzyx1/\" rel=\"noopener noreferrer\" target=\"_blank\">OMDB</a></li><li><a href=\"http://jsfiddle.net/salman/4mtyu/\" rel=\"noopener noreferrer\" target=\"_blank\">Google Maps</a></li></ul><h2>Additional Resources</h2><p>Here are some additional API resources and guides:</p><ul><li><a href=\"https://news.ycombinator.com/item?id=7546040\" rel=\"noopener noreferrer\" target=\"_blank\">Simple APIs without authentication</a></li><li><a href=\"http://www.programmableweb.com/apis/directory\" rel=\"noopener noreferrer\" target=\"_blank\">ProgrammableWeb API Directory</a></li><li><a href=\"http://jsfiddle.net/zalun/sthmj/embedded/result\" rel=\"noopener noreferrer\" target=\"_blank\">JSFiddle</a></li><li><a href=\"http://speckyboy.com/2014/01/22/building-simple-reddit-api-webapp-using-jquery\" rel=\"noopener noreferrer\" target=\"_blank\">Building a Simple Reddit API Webapp using jQuery</a></li><li><a href=\"https://www.govtrack.us/api/v2/role?current=true\" rel=\"noopener noreferrer\" target=\"_blank\">List of current representatives and senators from GovTrack.us</a></li><li><a href=\"https://developers.giphy.com/docs/api#quick-start-guide\" rel=\"noopener noreferrer\" target=\"_blank\">Giphy API Quickstart Guide</a></li></ul><p><br></p><p><strong><em>Source:</em></strong><em> </em><a href=\"https://coding-boot-camp.github.io/full-stack/apis/api-resources\" rel=\"noopener noreferrer\" target=\"_blank\"><em>The Coding BootCamp</em></a></p>",
    "date_created": "2023-02-02 18:55:03",
    "date_modified": "2023-03-18 15:43:51",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/image_apis.avif",
    "image_alt": "API Selection",
    "user_id": 1
  },
  {
    "id": 2,
    "title": "HTML Cheat Sheet",
    "content": "<h2>What Is HTML?</h2><p><strong>Hypertext Markup Language (HTML)</strong> is one of the three cornerstone languages used to develop webpages.</p><p>HTML handles the standard <strong>markup</strong> of a page. Using HTML, we define the basic framework for the page and the elements we want to appear on it.</p><p>Here are some of the things we define using HTML:</p><ul><li>Text elements on the page</li><li>Images on the page</li><li>The order in which the elements appear on the page</li><li>Which text elements are the primary and secondary headings</li></ul><p>While HTML decides the framework for a page, HTML does not determine the styling or specific layout. Styling rules are set using CSS. Likewise, HTML does not make the page interactive. That task is handled with JavaScript.</p><p>HTML's role in web development is to define the <strong>framework</strong> for the page.</p><p>The following image shows an example of a webpage that uses only HTML:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/32f463ba378d130f8c427f38360f3b5a/2e195/100-html-page-only-html.png\" alt=\"A screenshot illustrates a basic HTML webpage that features only text without styling.\"></span></p><p>Note that while all the elements are there, the page lacks styling and interactivity.</p><h3>HTML Elements</h3><p>An <strong>element</strong> is a part of a webpage that holds content or performs a specific task. In HTML, elements often contain information that is visible on the page, such as an image or text. However, not all elements are visible. Some elements contain information that the browser needs to render the page or are used to divide the content on the page in a logical, readable way.</p><h3>HTML Tags</h3><p>HTML elements are usually composed of an opening and closing tag. Everything inside the tags is considered part of the element.</p><p>Refer to the following code for an example:</p><pre class=\"ql-syntax\" spellcheck=\"false\">&lt;p&gt; This is a paragraph element. &lt;/p&gt;\r\n</pre><p>Some elements, though, do not require both opening and closing tags. These special cases are known as <strong>void elements</strong>, or <strong>self-closing tags</strong>. Self-closing tags do not contain additional content but might have attributes.</p><p>A common void element is the image element <code>&lt;img&gt;</code>.</p><p>Another common void element is <code>&lt;br&gt;</code>, which adds a break between other elements.</p><h3>The HTML Document</h3><p>All HTML documents follow a similar format, composed of an <code>&lt;html&gt;</code> element that contains a <code>&lt;head&gt;</code> and <code>&lt;body&gt;</code> element. The <code>&lt;head&gt;</code> element contains the metadata on the page. Elements placed inside the <code>&lt;head&gt;</code> are not visible on the page and are meant to provide the information needed for the browser to render the page properly. The <code>&lt;body&gt;</code> contains the elements viewed on the page.</p><p>The following code shows an example of <code>&lt;header&gt;</code> and <code>&lt;body&gt;</code> elements:</p><pre class=\"ql-syntax\" spellcheck=\"false\">&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n    &lt;meta charset=\"UTF-8\"&gt;\r\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n    &lt;title&gt;Document&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n  &lt;header&gt;\r\n      &lt;h1&gt;Sample Webpage&lt;/h1&gt;\r\n  &lt;/header&gt;\r\n\r\n  &lt;section&gt;\r\n      &lt;h2&gt;My List&lt;/h2&gt;\r\n      &lt;ul&gt;\r\n        &lt;li&gt;Item 1&lt;/li&gt;\r\n        &lt;li&gt;Item 2&lt;/li&gt;\r\n        &lt;li&gt;Item 3&lt;/li&gt;\r\n      &lt;/ul&gt;\r\n  &lt;/section&gt;\r\n\r\n  &lt;section&gt;\r\n      &lt;h2&gt;My Paragraph&lt;/h2&gt;\r\n         &lt;p&gt;This is my paragraph text.&lt;/p&gt;  \r\n  &lt;/section&gt;\r\n    \r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre><h3>Head Elements</h3><p>The following elements are included in the <code>&lt;head&gt;</code> element:</p><ul><li>The <code>&lt;title&gt;</code> element is required in every HTML document. The <code>title</code> element provides a metadata name for the page.</li><li>The <code>&lt;style&gt;</code> element is used to embed CSS and contains the CSS rules needed to style the page.</li><li>The <code>&lt;link&gt;</code> element defines the relationship between the current page and an external source.</li><li>The <code>&lt;meta&gt;</code> element defines metadata for the page.</li><li>The <code>&lt;script&gt;</code> element is used to embed JavaScript on the page.</li><li>The <code>&lt;noscript&gt;</code> element defines the content to be displayed if scripts are disabled.</li></ul><h3>Body Elements</h3><p>The following elements are commonly used in the <code>&lt;body&gt;</code> to create the visible page:</p><ul><li>The <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, <code>&lt;h4&gt;</code>, <code>&lt;h5&gt;</code>, and <code>&lt;h6&gt;</code> elements represent the level of <strong>heading</strong> that a given text block represents. Headings are exactly what they sound like: larger or more prominent elements of text on a page -- like topic sentences in a paper.</li><li>The <code>&lt;p&gt;</code> element represents paragraphs or blocks of text. You'll use this element extensively to wrap most of the text on your webpages.</li><li>The <code>&lt;strong&gt;</code> and <code>&lt;em&gt;</code> elements can respectively <strong>bold</strong> or <em>italicize</em> a given text element.</li><li>The <code>&lt;br&gt;</code> element creates a line of empty space between two blocks of content.</li><li>The <code>&lt;img&gt;</code> element displays images on a page. The syntax differs slightly (refer to the next section) for this element.</li><li>The <code>&lt;a&gt;</code> element (or <strong>anchor</strong> element) creates links to the same webpage or to other webpages. Again, the syntax differs slightly.</li><li>The <code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, and <code>&lt;li&gt;</code> elements represent unordered lists, ordered lists, and list items. In essence, these HTML elements represent bulleted lists of symbols or numbers.</li></ul><h3>Semantic Elements</h3><p>Semantic elements are often used to divide a page. Semantic elements have names that describe the section. It is important to use semantic elements when possible, to help make your code more readable. In addition, using structural, semantic HTML is key to making your page accessible to users that use an assistive device to access the page.</p><p>The following are common semantic elements:</p><ul><li>The <code>&lt;article&gt;</code> element is used to contain an independent piece of content, such as a blog post or widget.</li><li>The <code>&lt;aside&gt;</code> element is used to contain content that often appears to one side and provides extra information about the page's topic.</li><li>The <code>&lt;details&gt;</code> element is used for additional details that the user can open or hide on demand.</li><li>The <code>&lt;figcaption&gt;</code> element is used to define a caption for a figure or image.</li><li>The <code>&lt;figure&gt;</code> element is used to define an image. It is often used with <code>&lt;figcaption&gt;</code>.</li><li>The <code>&lt;footer&gt;</code> element is used to define the footer on the page.</li><li>The <code>&lt;header&gt;</code> element is used to define the page's header.</li><li>The <code>&lt;main&gt;</code> element is used to define the primary content and is often used with <code>&lt;aside&gt;</code> to define primary and secondary content.</li><li>The <code>&lt;nav&gt;</code> element is used to define the area of the page with navigation links.</li><li>The <code>&lt;section&gt;</code> element is used to group content that can stand on its own in its own section.</li></ul><h3>Attributes</h3><p>HTML attributes are used to provide additional information about an element. All elements -- including void elements -- can accept attributes.</p><h4>Global Attributes</h4><p>Global attributes are attributes that can be used on any element, although they might not have an impact on or change some elements.</p><p>The following are common global attributes:</p><ul><li>The <code>data-*</code> forms a class of attributes that allows the element to interact with the DOM. When using the <code>data-*</code> the placeholder <code>*</code> is replaced by the name of class you want to create. For example, to create a data class named columns, <code>data-columns</code> would be used.</li><li>The <code>dir</code> attribute determines the direction of the attribute. Often used with languages that are read from left to right.</li><li>The <code>lang</code> attribute determines the language for the element.</li><li>The <code>style</code> attribute contains CSS styling declarations that will apply to that element.</li><li>The <code>class</code> attribute groups one or more elements.</li><li>The <code>id</code> attribute identifies a single element.</li></ul><h4>Non-Global Attributes</h4><p>Other elements can be used only with specific elements. Here is a list of some of the common element-specific attributes:</p><ul><li>The <code>alt</code> attribute identifies text to be shown if the element cannot be displayed. Primarily used with images.</li><li>The <code>href</code> attribute is used primarily with <code>&lt;link&gt;</code> and <code>&lt;a&gt;</code> to define the URL of a linked resource.</li><li>The <code>placeholder</code> attribute is used primarily with <code>&lt;input&gt;</code> and <code>&lt;textarea&gt;</code> to provide a hint suggesting that information should be entered.</li><li>The <code>src</code> attribute is primarily used with <code>&lt;audio&gt;</code>, <code>&lt;img&gt;</code>, <code>&lt;input&gt;</code>, and <code>&lt;script&gt;</code> to define URLs of embeddable content.</li><li>The <code>value</code> attribute is used primarily with <code>&lt;button&gt;</code>, <code>&lt;data&gt;</code>, <code>&lt;input&gt;</code>, and <code>&lt;li&gt;</code> to assign a value to the element.</li></ul><h2>Resources</h2><p>The elements and attributes listed above are just some of tools you can use to build a page using HTML. For more information about HTML, elements, and attributes, you can refer to the following resources:</p><ul><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" rel=\"noopener noreferrer\" target=\"_blank\">MDN Web Docs on HTML</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\" rel=\"noopener noreferrer\" target=\"_blank\">MDN Web Docs on HTML elements</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\" rel=\"noopener noreferrer\" target=\"_blank\">MDN Web Docs on global attributes</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\" rel=\"noopener noreferrer\" target=\"_blank\">MDN Web Docs on HTML attributes</a></li></ul><p><br></p><p><strong><em>Source:</em></strong><em> </em><a href=\"https://coding-boot-camp.github.io/full-stack/html/html-cheatsheet\" rel=\"noopener noreferrer\" target=\"_blank\"><em>The Coding BootCamp</em></a><em> </em></p>",
    "date_created": "2023-02-04 18:55:03",
    "date_modified": "2023-03-18 15:33:04",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/app-checklist.jpg",
    "image_alt": "app-checklist.jpg",
    "user_id": 2
  },
  {
    "id": 3,
    "title": "MySQL Reference Guide",
    "content": "<p>MySQL is widely considered the most reliable, scaleable, and developer-friendly open source relational database management system. It powers the back end of many popular social, streaming, and service web applications.</p><p>MySQL comes with a lot of new terminology and commands to learn, so you might find it challenging to get started. You can use this reference guide to review unfamiliar MySQL commands, terminology, and syntax.</p><h2>Basic Terminology</h2><p>Before we cover MySQL commands, let's review the following basic terminology for relational databases:</p><ul><li><strong>SQL (Structured Query Language)</strong> is a common standardized language used to access databases.</li><li>A <strong>database</strong> is an organized collection of data, generally stored and accessed electronically from a computer system.</li><li>A <strong>relational database</strong> organizes data into tables that can be linked, creating relationships between the data.</li><li>A <strong>table</strong> is a collection of related data within a database. A database can have one or more tables.</li><li>A <strong>column</strong> is a field that holds a set of related data within a table.</li><li>A <strong>row</strong> is a single record within a table.</li><li>A <strong>primary key</strong> provides a unique identifier for each row, or record, in a table. A table can only have one primary key, consisting of a single column.</li><li>A <strong>foreign key</strong> is a field in one table that references the primary key of another table to link that data.</li></ul><h2>Common MySQL Commands</h2><p>Great! Now let's move on to some common MySQL commands.</p><h3>MySQL Shell Commands</h3><p>You'll likely use the following commands in the MySQL Shell:</p><ul><li><code>mysql -u [username] -p</code> allows you to access the MySQL Shell from the command line. You should replace the placeholder <code>[username]</code> with the actual username that you want to use (most likely <code>root</code>). After you enter this command, you'll be prompted to enter your MySQL password. Then you'll be logged into the MySQL Shell.</li><li><code>USE [name of database]</code> selects the database that you want to work in, or use.</li><li><code>SHOW DATABASES</code> displays a list of all the existing databases that you have access to.</li><li><code>SHOW TABLES</code> displays a list of all the tables in the database that you're using.</li><li><code>SELECT DATABASES()</code> shows the database currently in use.</li><li><code>DESCRIBE [name of table]</code> describes a table's structure.</li></ul><h3>Database Commands</h3><p>You can use the following MySQL commands to affect databases:</p><ul><li><code>CREATE DATABASE [name of database]</code> creates a new database with the name specified in the command.</li><li><code>DROP DATABASE [name of database]</code> drops, or deletes, the database specified in the command.</li><li><code>DROP DATABASE IF EXISTS [name of database]</code> drops, or deletes, the specified database only if it exists\u2014preventing an error if there's no database by that name.</li></ul><h3>Table Commands</h3><p>You can use the following MySQL commands to affect tables:</p><ul><li><code>CREATE TABLE [name of table]</code> creates a table with the specified name within a database.</li><li><code>DROP TABLE [name of table]</code> drops, or deletes, a table with the specified name within a database.</li><li><code>DROP TABLE IF EXISTS [name of table]</code> drops, or deletes, a specified table only if it exists\u2014preventing an error if there's no table by that name.</li><li><code>INSERT INTO [name of table]</code> inserts a new row into a specified table.</li><li><code>UPDATE [name of table] SET [column]</code> updates records in a specified table. The <code>SET</code> clause indicates which columns to modify and the values they should be given, and it's normally followed by the <code>WHERE</code> clause.</li><li><code>DELETE FROM [name of table]</code> deletes records from a specified table.</li><li><code>ALTER TABLE [name of table]</code> alters an existing table (for example, adding a column to the specified table).</li></ul><h3>Data Retrieval</h3><p>You can retrieve specific data using the following MySQL commands:</p><ul><li><code>SELECT</code> selects, or retrieves, records from a table.</li><li><code>FROM</code> specifies the table that contains the data we want to retrieve.</li><li><code>*</code> is a wildcard character that selects all records from a table. It can be used together with the <code>WHERE</code> clause to retrieve all records that meet specific criteria.</li><li><code>WHERE</code> is an optional clause that specifies conditions that the data must meet to be returned.</li><li><code>LIMIT</code> is an optional clause that limits the number of records returned.</li><li><code>COUNT()</code> is an aggregate function that takes the name of a column as an argument and returns the number of records that are returned by a <code>SELECT</code> query where the column isn't <code>NULL</code>.</li><li><code>GROUP BY</code> groups rows that have the same value. It's often used in combination with aggregate functions, such as <code>COUNT()</code>.</li><li><code>SELECT * FROM [name of table]</code> selects, or retrieves, all records from a specified table.</li><li><code>SELECT COUNT([name of column]) FROM [name of table]</code> returns the number of records from a specified table.</li></ul><h2>Resources</h2><p>You can use the terminology and commands outlined here in several variations and combinations\u2014but this quick reference guide is just a starting point as you begin to learn MySQL. To learn more as you progress, you can refer to the following resources:</p><ul><li><a href=\"https://dev.mysql.com/doc/refman/5.7/en/what-is-mysql.html\" rel=\"noopener noreferrer\" target=\"_blank\">What is MySQL?</a></li><li><a href=\"https://dev.mysql.com/doc/mysql-shell/8.0/en/\" rel=\"noopener noreferrer\" target=\"_blank\">MySQL Shell</a></li><li><a href=\"https://dev.mysql.com/doc/refman/5.7/en/creating-database.html\" rel=\"noopener noreferrer\" target=\"_blank\">MySQL: Creating and Selecting a Database</a></li><li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/creating-tables.html\" rel=\"noopener noreferrer\" target=\"_blank\">MySQL: Creating a Table</a></li><li><a href=\"https://dev.mysql.com/doc/refman/8.0/en/select.html\" rel=\"noopener noreferrer\" target=\"_blank\">MySQL: SELECT Statements</a></li></ul><p><strong><em>Source:</em></strong><em> </em><a href=\"https://coding-boot-camp.github.io/full-stack/mysql/mysql-reference-guide\" rel=\"noopener noreferrer\" target=\"_blank\"><em>The Coding Boot Camp</em></a></p>",
    "date_created": "2023-02-05 18:55:03",
    "date_modified": "2023-03-22 04:42:59",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/bellagio-las-vegas.jpg",
    "image_alt": "bellagio-las-vegas.jpg",
    "user_id": 3
  },
  {
    "id": 4,
    "title": "Getting Started with Git",
    "content": "<p>Code files are typically collaborative, as it is common for developers to build on each other's work. To facilitate this collaboration and ensure code integrity, many developers use Git for version control, and GitHub to securely store and share their code online.</p><p>Git has a steep learning curve, but with practice, using it can become second nature to you. To help you get started, this guide explains how to set up your Git environment and introduces some commonly used Git and terminal commands.</p><p>First, we'll walk through how to set up your Git username, which enables Git to associate commits with your identity.</p><p>For more information, please visit the <a href=\"https://coding-boot-camp.github.io/full-stack/git/getting-started-with-git\" rel=\"noopener noreferrer\" target=\"_blank\"><strong><em>Coding Boot Camp Blog</em></strong></a>.</p>",
    "date_created": "2023-02-07 18:55:03",
    "date_modified": "2023-03-22 05:04:17",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/Javascript.png",
    "image_alt": "Javascript.png",
    "user_id": 1
  },
  {
    "id": 5,
    "title": "Professional README Guide",
    "content": "<p>A polished GitHub profile is an important part of your public identity as a developer. Why? For one thing, it will most likely be the first place that potential employers look to evaluate your skills and professionalism. And it also allows you to connect with and showcase your work to other developers, which can lead to interesting collaborations.</p><p>A key component of your profile, and one that many new developers overlook, is the README file that's associated with each respository. A README file acts like a virtual storefront to a repository\u2014it's the first thing that a person sees when they visit a repo on GitHub. But it's also much more than that: README files contain essential information about the repo's project. Thus, the quality of a README file can differentiate a high-quality repo from a low-quality one.</p><p>There's no one right way to structure a README file. There is one very wrong way, however, and that is to not include a README at all or to create a very sparse one.</p><p>To help you create high-quality READMEs from the start, this guide outlines some basic best practices for creating them. As you progress in your career, you'll develop your own ideas about what makes an effective README file.</p><p><br></p><p>For more information, please visit the <a href=\"https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide\" rel=\"noopener noreferrer\" target=\"_blank\">Coding Boot Camp Blog</a>.</p>",
    "date_created": "2023-02-10 18:55:03",
    "date_modified": "2023-03-18 16:13:33",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/Florida-beach.jpg",
    "image_alt": "Florida beach",
    "user_id": 4
  },
  {
    "id": 6,
    "title": "How to Install NodeJS",
    "content": "<p><a href=\"https://nodejs.org/en/\" rel=\"noopener noreferrer\" target=\"_blank\">Node.js</a> is an asynchronous JavaScript runtime environment that executes JavaScript code outside of a browser. This allows developers to code the back ends of their applications using JavaScript instead of another programming language. Node.js runs scripts on the server side to produce dynamic webpage content before the page is sent to the user's web browser.</p><p>Node.js has two versions. The <strong>LTS version</strong> is the most recent stable version that typically guarantees that critical bugs have been fixed or a period of time, often up to 30 months. Apps built for production or requiring a reliable Node.js version should always use LTS releases.</p><p>The <strong>Current</strong> version is the most recent release of Node.js. All new Node.js releases enter a current release period of six months. During this time, the content authors have time to identify major bugs and troubleshoot the build.</p><p>Since users of the current version may face incompatibility issues and bugs that are not yet addressed, it is important to <strong>download the tested and stable LTS version</strong> to make sure your app -- and Node.js -- perform as expected.</p><h2>Install Node.js on Windows</h2><blockquote><strong>Note:</strong> The LTS version for Node.js is currently 18.x.x. Due to the technology changes discussed below, please install version 16.x.x using the alternate instructions provided.</blockquote><p>To install Node.js version 16on a Windows computer, go to <a href=\"https://nodejs.org/en/\" rel=\"noopener noreferrer\" target=\"_blank\">Node's website</a>. Under \"Download for Windows (x64)\", click the green box with the LTS version of Node to download the installer. Use this link and choose . The correct version will be labeled \"x.x.x LTS Recommended for Most Users\", where \"x.x.x\" is a combination of numbers. For example, the version shown in the following image is \"12.14.1 LTS\":</p><blockquote><strong>Important:</strong> Due to technologies constantly changing, Node's version 18 does not work well with MERN and GraphQL at this time. These problems are sure to be resolved in the upcoming weeks, but until then we'll roll back to Node version 16 to make sure our projects perform as they should. Use this <a href=\"https://nodejs.org/download/release/v16.18.0/node-v16.18.0-x64.msi\" rel=\"noopener noreferrer\" target=\"_blank\">Version Link</a> to download version 16 on your machine until this issue is resolved.</blockquote><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/c111810c759f80938bdafb7db93a46f3/c1b63/09-node-nodejs-demo-01.png\" alt=\"Node.js website with LTS version of Node installer highlighted\"></span></p><p>After the installer has downloaded, open it to begin the installation process. Follow the prompts by clicking Next in the Setup Wizard, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/24ca65a93068b85b35d18d22908e072a/c1b63/09-node-nodejs-demo-02.png\" alt=\"Node.js Setup Wizard with Next button highlighted\"></span></p><blockquote><strong>Note:</strong> You may be prompted to install tools for native modules. Don't select anything on that page and just click on Next.</blockquote><p>After you click the checkbox to accept the license agreement, continue clicking Next until the installation screen says \"Ready to install Node.js\". Click the Install button to finish installing Node.js.</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/922d951e1282412a94e7747fff3d7c16/c1b63/09-node-nodejs-demo-03.png\" alt=\"Node.js Setup Wizard with Install button highlighted\"></span></p><p>When the installation is complete, click Finish.</p><h2>Install Node.js on macOS</h2><blockquote><strong>Note:</strong> The LTS version for Node.js is currently 18.x.x. Due to the technology changes discussed below, please install version 16.x.x using the alternate instructions provided.</blockquote><p>To install Node.js on macOS, go to <a href=\"https://nodejs.org/en/\" rel=\"noopener noreferrer\" target=\"_blank\">Node's website</a>. Under \"Download for macOS\", click the green box with the LTS version of Node to download the installer. The correct version will be labeled \"x.x.x LTS Recommended for Most Users\", where \"x.x.x\" is a combination of numbers. For example, the version shown in the following image is \"12.16.1 LTS\":</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/c7366618d62d0588f73f4019ecdce3c7/c1b63/09-node-nodejs-demo-04.png\" alt=\"Node.js website with LTS version of Node installer highlighted\"></span></p><p>After the installer has downloaded, open it to begin the installation process. Just as in the instructions for Windows, follow all of the installation prompts until Node.js is installed on your computer.</p><p>To use Homebrew to install Node.js, first go to <a href=\"https://nodejs.org/en/\" rel=\"noopener noreferrer\" target=\"_blank\">Node's website</a> to find the most recent LTE version.</p><p>Then, make sure to include the first two numbers of the LTS version in the installation script.</p><p>For example, in the image above, the version shown is \"12.16.1 LTS\". To install this version using Homebrew, you would use the following script: <code>brew install node@12</code>.</p><blockquote><strong>Important:</strong> Due to technologies constantly changing, Node's version 18 does not work well with MERN and GraphQL at this time. These problems are sure to be resolved in the upcoming weeks, but until then we'll roll back to Node version 16 to make sure our projects perform as they should. For now, use this script until this issue is resolved: <code>brew install node@16</code>.</blockquote><p>After the installation is complete, enter <code>node -v</code> in the terminal to check that the most recent LTS version has been installed.</p><p><strong><em>Source:</em></strong><em> </em><a href=\"https://coding-boot-camp.github.io/full-stack/nodejs/how-to-install-nodejs\" rel=\"noopener noreferrer\" target=\"_blank\"><em>The Coding Boot Camp</em></a></p>",
    "date_created": "2023-02-16 18:55:03",
    "date_modified": "2023-03-18 16:20:19",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/Deploying-apps.jpg",
    "image_alt": "deploying-apps",
    "user_id": 5
  },
  {
    "id": 7,
    "title": "Quilljs 101",
    "content": "<h2><a href=\"https://lucidar.me/en/rich-content-editor/how-to-get-html-content-from-quill-rich-editor/#introduction\" rel=\"noopener noreferrer\" target=\"_blank\">#</a> Introduction</h2><p><a href=\"https://quilljs.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Quill</a> is currently my favorite rich text editor. The Quill content is described by the <a href=\"https://quilljs.com/docs/delta/\" rel=\"noopener noreferrer\" target=\"_blank\">Deltas format</a>. This format is a subset of JSON, well suited for many applications. But you sometime need to get raw HTML content for publishing on a web page or sending content via email.</p><p>This page explains how to get raw HTML from JS or post the content of the form. The following has been tested with Quill version 1.3.6.</p><h2><a href=\"https://lucidar.me/en/rich-content-editor/how-to-get-html-content-from-quill-rich-editor/#get-html\" rel=\"noopener noreferrer\" target=\"_blank\">#</a> Get HTML</h2><p>Many options exist to get HTML content from Quill editor.</p><p>You can try to convert Delta with a JavaScript library:</p><ul><li><a href=\"https://www.npmjs.com/package/quill-delta-to-html\" rel=\"noopener noreferrer\" target=\"_blank\">Quill Delta to HTML Converter</a></li><li><a href=\"https://stackoverflow.com/questions/39519950/convert-quill-delta-to-html/39547833\" rel=\"noopener noreferrer\" target=\"_blank\">Solutions on Stack Overflow</a></li></ul><p>You can parse the Delta format from server side with one of these libraries:</p><ul><li><a href=\"https://github.com/nadar/quill-delta-parser\" rel=\"noopener noreferrer\" target=\"_blank\">Quill Delta to HTML Parser</a></li><li><a href=\"https://www.transmute-coffee.com/php-quill-renderer.php#demo\" rel=\"noopener noreferrer\" target=\"_blank\">PHP Quill Renderer</a></li></ul><p>I tried many of them, an no one were satisfying. I finaly found the simplest and best option on GitHub. From JavaScript use:</p><pre class=\"ql-syntax\" spellcheck=\"false\">var html = quill.root.innerHTML;\r\n</pre><p>You'll get the raw html without Quill classes. I made a JSFiddle to show how it works. Try it online, modify the content in the editor, HTML code should update automaticaly:</p><h2><a href=\"https://lucidar.me/en/rich-content-editor/how-to-get-html-content-from-quill-rich-editor/#post-html-in-a-form\" rel=\"noopener noreferrer\" target=\"_blank\">#</a> Post HTML in a form</h2><p>If you need to post HTML content in a HTML form, I suggest to create a hidden field to copy the HTML content inside when the submit button is clicked:</p><pre class=\"ql-syntax\" spellcheck=\"false\">&lt;input type=\"hidden\" name=\"quill-html\" id=\"quill-html\"&gt;\r\n</pre><p>When the submit button is clicked, copy the HTML code from Quill to the hidden form:</p><pre class=\"ql-syntax\" spellcheck=\"false\">// When the submit button is clicked, update output\r\n$('#btn-submit').on('click', () =&gt; { \r\n    // Get HTML content\r\n    var html = quill.root.innerHTML;\r\n\r\n    // Copy HTML content in hidden form\r\n    $('#quill-html').val( html )\r\n\r\n    // Post form\r\n    myForm.submit();\r\n})\r\n</pre><p>If you store the content in a database, I recommand to store the Delta format to keep compatibility with the Quill editor.</p><p><br></p><p><strong><em>Source</em></strong><em>: </em><a href=\"https://lucidar.me/en/rich-content-editor/how-to-get-html-content-from-quill-rich-editor/#introduction\" rel=\"noopener noreferrer\" target=\"_blank\"><em>Lucidar</em></a></p>",
    "date_created": "2023-03-05 07:31:36",
    "date_modified": "2023-03-18 15:27:12",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/quill-js-logo.webp",
    "image_alt": "quill-js-logo-744x400-1.webp",
    "user_id": 2
  },
  {
    "id": 8,
    "title": "Deploy with Heroku and MySQL",
    "content": "<p>You've already deployed a Node.js application to Heroku using the Heroku CLI, but what about deploying an application that needs to connect to a database?</p><p>In development, we get to use our local SQL servers for storing our application's data, but that won't work with a deployed application, since it won't have access to our machine. In this case, we need to do slightly more configuration on Heroku to deploy our app.</p><p>In this guide, we'll walk through the steps we need to take to deploy an application backed by a SQL database to Heroku.</p><h2>Enable the JawsDB Add-On in Heroku</h2><p>Before you get deploy your application to Heroku, you'll need to enable the JawsDB Add-On.</p><p><a href=\"https://elements.heroku.com/addons/jawsdb\" rel=\"noopener noreferrer\" target=\"_blank\">JawsDB Add-On</a> is a Heroku add-on that provides a fully functional MySQL database server for use with your Heroku application. For our purposes, you\u2019ll use the free Kitefin Shared pricing plan.</p><blockquote><strong>Note:</strong> Although the Kitefin Shared plan is free, you\u2019ll need to provide a credit card in the billing section of your Heroku account. Rest assured that you won\u2019t be charged anything as long as you choose the free Kitefin Shared plan, but you\u2019ll still need to provide your credit card information.</blockquote><p>To enable the JawsDB Add-On, log into your <a href=\"https://id.heroku.com/login\" rel=\"noopener noreferrer\" target=\"_blank\">Heroku account</a>. Once you have logged in, click on the profile icon in the upper right-hand corner of the page. This will open a drop-down menu. Click on \u201cAccount settings,\u201d as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/e79746ff523e2513c8c5b9d4ba3631ff/e17e5/13-orm-jaws-db-demo-01.png\" alt=\"In upper right-hand corner, a profile icon is highlighted in green, with \u201cAccount settings\u201d highlighted on drop-down menu.\"></span></p><p>This will take you to a page where you can manage your account. In the left-hand navigation, click on Billing, shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/e999e67d9da13a69c549a4f4c6428bc0/0b533/13-orm-jaws-db-demo-02.png\" alt=\"Under Manage Account, the Billing tab is highlighted in a green box.\"></span></p><p>Once you have reached the Billing page, enter your credit card information in the section named Billing Information, like in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/d23402d7a06579ba8455a490cb776942/0b533/13-orm-jaws-db-demo-03.png\" alt=\"Under the Billing tab, Billing Information is highlighted in a green box.\"></span></p><p>And that\u2019s it! You\u2019ll install the JawsDB add-on to use with your application in the next section.</p><h2>Deploy to Heroku</h2><p>Before you deploy your app, you'll want to make sure the <code>main</code> branch has all of your changes.</p><blockquote><strong>Pro Tip:</strong> You don't always have to push to Heroku from the <code>main</code> branch. Feature branches can be deployed with the following command:</blockquote><pre class=\"ql-syntax\" spellcheck=\"false\">git push heroku &lt;feature-branch&gt;:main\r\n</pre><blockquote>This is helpful if you're only using the Heroku URL for testing, but you wouldn't want to do this if the app is already in production.</blockquote><p>To get started with Heroku, simply run the following commands from within your project directory:</p><pre class=\"ql-syntax\" spellcheck=\"false\">heroku create\r\ngit push heroku main\r\n</pre><p>The next step in making your app Heroku-compatible is adding the following line in <code>server.js</code>:</p><pre class=\"ql-syntax\" spellcheck=\"false\">const PORT = process.env.PORT || 3001;\r\n</pre><p>This uses Heroku's <code>process.env.PORT</code> value when deployed and <code>3001</code> when run locally. Having a dynamic port number is important, because it's very unlikely that the port number you hardcode (3001, for example) would be the port Heroku runs your app on in production.</p><p>There's another hardcoded value in the app that Heroku won't appreciate. Open your <code>config/connection.js</code> file and review the current setup, as shown in the settings below:</p><pre class=\"ql-syntax\" spellcheck=\"false\">const sequelize = new Sequelize(\r\n  process.env.DB_NAME,\r\n  process.env.DB_USER,\r\n  process.env.DB_PW,\r\n  {\r\n    host: 'localhost',\r\n    dialect: 'mysql',\r\n    port: 3306,\r\n  },\r\n);\r\n</pre><p>As of now, this will only work with your local database. Could you continue using your local database even on Heroku? Well, yes, but then you'd have to make your ports public (probably not a good idea) and always leave your computer on.</p><p>Instead, we should make a new remote database on Heroku and tell the app to connect to that one when deployed but still use the local database when running locally. Fortunately, Heroku comes with a variety of add-ons that make setting up a remote database relatively easy. The one we'll use for MySQL is called JawsDB.</p><blockquote><strong>Important:</strong> When using Heroku add-ons, Heroku will require you to put a credit card on file. Heroku will not charge you, though, unless you specifically upgrade to one of their paid services.</blockquote><p>Open the <a href=\"https://dashboard.heroku.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Heroku Dashboard</a> in your browser and navigate to the app that you created for this project.</p><blockquote><strong>Pro Tip:</strong> If you already have several projects on Heroku, it might be confusing to tell which one is the current one, since all the projects are named with auto-generated pseudonyms.</blockquote><blockquote>To see which name Heroku is using for your application, run the following code in your terminal:</blockquote><pre class=\"ql-syntax\" spellcheck=\"false\">git remote -v\r\n</pre><blockquote>It will then report something like this:</blockquote><pre class=\"ql-syntax\" spellcheck=\"false\">heroku  https://git.heroku.com/sacred-cow-72631.git (fetch)\r\nheroku  https://git.heroku.com/sacred-cow-72631.git (push)\r\norigin  git@github.com:myGitHub/just-tech-news.git (fetch)\r\norigin  git@github.com:myGitHub/just-tech-news.git (push)\r\n</pre><blockquote>This will mean that sacred-cow-72631 is the app's name at Heroku.</blockquote><p>Once there, click on the Resources tab, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/bbf1db0f54e9a8ac8a22048a058fedc0/e5166/600-heroku-resources.jpg\" alt=\"In the Heroku dashboard, the Resources tab has been selected.\"></span></p><p>Underneath Add-ons, search for \"JawsDB MySQL\" per the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/0cf277341bdb891a5785ec39c6c482d6/e5166/700-search-addon.jpg\" alt=\"The add-ons search box displays a dropdown with JawsDB MySQL.\"></span></p><p>Heroku will confirm that you want to add JawsDB to your app. Click the Provision button, and you're done! You now have access to a remote MySQL database hosted by Heroku.</p><p>Return to your codebase and open the <code>connection.js</code> file again. Update the connection logic to look like the following code:</p><pre class=\"ql-syntax\" spellcheck=\"false\">let sequelize;\r\n\r\nif (process.env.JAWSDB_URL) {\r\n  sequelize = new Sequelize(process.env.JAWSDB_URL);\r\n} else {\r\n  sequelize = new Sequelize(\r\n    process.env.DB_NAME,\r\n    process.env.DB_USER,\r\n    process.env.DB_PW,\r\n    {\r\n      host: 'localhost',\r\n      dialect: 'mysql',\r\n      port: 3306,\r\n    },\r\n  );\r\n}\r\n</pre><p>When the app is deployed, it will have access to Heroku's <code>process.env.JAWSDB_URL</code> variable and use that value to connect. Otherwise, it will continue using the <code>localhost</code> configuration.</p><p>Let's try it out! Run the following commands from the terminal to update the app:</p><pre class=\"ql-syntax\" spellcheck=\"false\">git add -A\r\ngit commit -m \"connect to jawsdb\"\r\ngit push heroku main\r\n</pre><p>If your app doesn't have a front end, there won't be much to see in the browser. You can still test the API endpoints with Insomnia Core, though. Simply replace <code>http://localhost:3001</code> with the name of your Heroku app. For example: <code>https://just-tech-news.herokuapp.com/api/posts</code>.</p><p>Of course, all of your GET requests will return empty data sets, because you're connected to a brand new database. You'll need to make a few POST requests first to fill up the JawsDB database.</p><p><strong><em>Source: </em></strong><a href=\"https://coding-boot-camp.github.io/full-stack/heroku/deploy-with-heroku-and-mysql\" rel=\"noopener noreferrer\" target=\"_blank\"><em>The Coding Boot Camp</em></a></p>",
    "date_created": "2023-03-05 19:45:01",
    "date_modified": "2023-03-18 16:11:26",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/App-to-App-Deployment-Feature.webp",
    "image_alt": "App-to-App-Deployment-Feature.webp",
    "user_id": 6
  },
  {
    "id": 9,
    "title": "How to Install MongoDB",
    "content": "<p><a href=\"https://www.mongodb.com/\" rel=\"noopener noreferrer\" target=\"_blank\">MongoDB</a> is a general purpose, document-based, distributed NoSQL database built for web application developers in the cloud era. It\u2019s one of the most popular database choices for modern applications.</p><p>To install MongoDB on your machine, follow the instructions for your operating system below. Some of the images and versions mentioned below may be slightly different from the MongoDB web site, but the general instruction is the same.</p><h2>Install MongoDB on Windows</h2><p>Refer to the following instructions if you\u2019re using Windows; scroll down for instructions for macOS.</p><p><a href=\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-windows/\" rel=\"noopener noreferrer\" target=\"_blank\">MongoDB\u2019s Install Documentation</a> is a great place to start when installing MongoDB. It\u2019s updated constantly, and it will provide you with the most recent changes to any part of the installation process. We\u2019ve also provided step-by-step instructions here.</p><h3>Create a Data Directory for MongoDB</h3><blockquote><strong>Important</strong>: The first step is to create a data directory to store MongoDB\u2019s databases. Without this, you won\u2019t be able to complete the installation.</blockquote><p>Open git Bash, then <code>cd</code> into the root directory (<code>c:</code> drive) of your computer:</p><pre class=\"ql-syntax\" spellcheck=\"false\">cd /c\r\n</pre><p>Once you\u2019re in the root directory, run the following command to create a <code>data/db</code> directory:</p><pre class=\"ql-syntax\" spellcheck=\"false\">mkdir -p data/db\r\n</pre><p>This directory will be the default location for MongoDB\u2019s databases. Without a directory for your databases, MongoDB will not run.</p><p>Now you can download and install MongoDB.</p><h3>Download and Install MongoDB on Windows</h3><p>To install MongoDB on your Windows machine, <a href=\"https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-6.0.4-signed.msi\" rel=\"noopener noreferrer\" target=\"_blank\">download the MongoDB installer</a>.</p><p>After the installer has downloaded, open it to begin the installation process. Follow the prompts by clicking Next in the Setup Wizard, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/e2296bee009ccc3bc79061953a9192a4/c1b63/18-nosql-mongodb-win-demo-03.png\" alt=\"Welcome screen for the MongoDB setup wizard with the Next button active at the bottom.\"></span></p><blockquote><strong>Note</strong>: A window might appear mid-installation, asking you whether you\u2019re sure you want to download a particular component of MongoDB. Click yes; otherwise, the install will fail.</blockquote><p>You\u2019ll also need to accept the terms in the License Agreement before you can continue. When the installer prompts you to Choose Setup Type, click Complete, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/3704ae54ea1b7c3cc09ca12d8489b7c7/c1b63/18-nosql-mongodb-win-demo-04.png\" alt=\"Choose Setup Type window with Complete button and Custom button. The Complete button is active.\"></span></p><p>On the next screen, ensure that the checkbox for \u201cInstall MongoD as a Service\u201d is checked and that the option \u201cRun Service as Network Service user\u201d is selected. These options should already be selected. Leave everything the way it is and click Next, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/0fa92b72598080f7c8fe51347a42a27c/c1b63/18-nosql-mongodb-win-demo-05.png\" alt=\"Service Configuration window shows Install MongoD as a Service and the Next highlighted in green, indicating they should be clicked.\"></span></p><p>You should then see a screen that says Install MongoDB Compass.</p><blockquote><strong>Important</strong>: DO NOT install MongoDB Compass along with your MongoDB install.</blockquote><p>Ensure that the checkbox for Install MongoDB Compass is NOT selected and click Next, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/43cd4b6fd5de8a22dea91aa1084c1051/c1b63/18-nosql-mongodb-win-demo-06.png\" alt=\"Install MongoDB Compass window with that checkbox unchecked. The Next button in the lower right corner of the window is highlighted, indicating it should be clicked.\"></span></p><p>On the next screen, you\u2019ll see a message that says \u201cReady to install MongoDB\u201d followed by the version number. Click Install to finish installing MongoDB, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/94bb292214fb26db604c3c01f75dc731/c1b63/18-nosql-mongodb-win-demo-07.png\" alt=\"Ready to Install MongoDB window with Install button in lower right corner highlighted.\"></span></p><p>The last screen you\u2019ll see will say that you\u2019ve completed the installation. Click Finish.</p><h3>Configure MongoDB on Windows</h3><p>Now that you\u2019ve installed MongoDB, you\u2019ll need to add the PATH to the MongoDB install to your environmental variables. Follow these steps to do that:</p><p>Copy the PATH to MongoDB to your clipboard. Open any folder on your computer and click on This PC in the left-hand navigation bar, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/a99e20f5aea6049190664d0ba68af240/c1b63/18-nosql-mongodb-win-demo-08.png\" alt=\"In the navigation bar, This PC is highlighted with a green box around it.\"></span></p><p>Next, double-click your <code>C:</code> drive, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/90eeefe126eeed41e506d5ae665f8d8d/c1b63/18-nosql-mongodb-win-demo-09.png\" alt=\"Under \u201cDevices and drives,\u201d the `C:` drive is highlighted.\"></span></p><p>Double-click the folder named Program Files, then double-click the MongoDB folder. Double-click the Server folder, then double-click the folder with the MongoDB version number as its name.</p><p>Finally, double-click the folder named <code>bin</code>. Your screen should look like the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/46135169523c8cd5cc73d3fc67942ef6/c1b63/18-nosql-mongodb-win-demo-10.png\" alt=\"Windows Explorer window shows the files inside &quot;This PC / OS (C:) / Program Files / MongoDB / Server / 6.x / bin&quot;.\"></span></p><p>Right-click the address at the top of the screen and select \u201cCopy address as text.\u201d You should see something like the following image.</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/643e106773f42eb68daa6eeea96fb744/c1b63/18-nosql-mongodb-win-demo-11.png\" alt=\"Windows Explorer window with popup menu with \u201cCopy address as text\u201d highlighted.\"></span></p><p>Now that you\u2019ve got the PATH copied to your clipboard, press the Windows key on your keyboard and search for \u201cEdit the system environmental variables\u201d. Once that shows up in the search screen, click it, as the following image shows:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/6a170cd0f5583e1b7c4eb19dd518bb57/c1b63/18-nosql-mongodb-win-demo-12.png\" alt=\"\u201cEdit the system environment variables\u201d is highlighted at the top of the search results.\"></span></p><p>You\u2019ll then be prompted with the System Properties window. Make sure that the Advanced tab is highlighted, and click on Environment Variables, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/c65532e1c2cc518f97e1eb5336083dab/c1b63/18-nosql-mongodb-win-demo-13.png\" alt=\"In the Advanced tab on the System Properties window, Environment Variables is highlighted in green at the bottom.\"></span></p><p>You\u2019ll see a window entitled Environment Variables. In the top section, under \u201cUser variables for <code>&lt;user&gt;</code>\u201d (where <code>&lt;user&gt;</code> is your username on that computer), click Path and then click \u201cEdit...\u201d. It should look like the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/8bfea96767217de43967f3155255b78f/c1b63/18-nosql-mongodb-win-demo-14.png\" alt=\"On the Environment Variables window, Path is selected and highlighted, with the \u201cEdit\u2026\u201d button also highlighted.\"></span></p><p>The next window to appear will be \u201cEdit environment variable.\u201d Click \u201cNew\u2026\u201d, as shown in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/994a86dc67c0a1c6c217e966097a75da/c1b63/18-nosql-mongodb-win-demo-15.png\" alt=\"\u201cNew...&quot; button is selected on the \u201cEdit environment variable\u201d window.\"></span></p><p>Your cursor will appear in a new line at the bottom of the variables. Paste your PATH in this box and click OK. It should look like the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/0e1f6eb47a3d552d187edf447b586443/c1b63/18-nosql-mongodb-win-demo-16.png\" alt=\"On the \u201cEdit environment variable\u201d screen, an empty box is highlighted, and OK is highlighted  at the bottom of the screen.\"></span></p><p>Click OK on any remaining screens, then restart Git Bash completely. You can verify that the installation was correct by going to Git Bash and typing the following:</p><pre class=\"ql-syntax\" spellcheck=\"false\">mongod\r\n</pre><blockquote><strong>Note</strong>: There is no \"b\" at the end of this command; just <code>mongod</code>.</blockquote><p>You should see a large number of characters printed to the console, as in the following image:</p><p><span style=\"color: inherit;\"><img src=\"https://coding-boot-camp.github.io/full-stack/static/d4b0735be770797e0ae00a445343e68e/c1b63/18-nosql-mongodb-win-demo-17.png\" alt=\"Console shows lines of text.\"></span></p><blockquote><strong>Note</strong>: If <code>mongod</code> didn\u2019t run, and instead you received a \"command not found\" error, make sure you added MongoDB\u2019s bin directory to your PATH variable. Then, close out git bash and try running <code>mongod</code> again.</blockquote><blockquote><strong>Important</strong>: If <code>mongod</code> starts but closes after a series of prompts, make sure you created the <code>data/db</code> directory in the root directory of your computer (this is the very first step in this walkthrough). MongoDB cannot run without this directory.</blockquote><h2>Install MongoDB on macOS</h2><p>MongoDB\u2019s <a href=\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/\" rel=\"noopener noreferrer\" target=\"_blank\">Install Documentation</a> is a great place to start when installing MongoDB. It is updated constantly, so it will provide you with the most recent changes to any part of the installation process. We\u2019ve also provided the following step-by-step instructions.</p><blockquote><strong>Important</strong>: Ensure that you've installed <a href=\"https://apps.apple.com/us/app/xcode/id497799835\" rel=\"noopener noreferrer\" target=\"_blank\">Xcode</a> and <a href=\"https://brew.sh/\" rel=\"noopener noreferrer\" target=\"_blank\">Homebrew</a> before continuing.</blockquote><blockquote>To check to see if Homebrew is installed, run <code>brew --version</code> in your terminal window. If your terminal displays a version of Homebrew, you can move on to the installation guide. If you see an error message like <code>command not found</code>, run the following command in your terminal to install Homebrew:</blockquote><pre class=\"ql-syntax\" spellcheck=\"false\">/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\r\n</pre><p>Once you have confirmed that Homebrew is on your machine, move on to the installation guide.</p><h3>Install MongoDB on macOS</h3><p>To install MongoDB on macOS, run the following command:</p><pre class=\"ql-syntax\" spellcheck=\"false\">brew tap mongodb/brew\r\n</pre><p>Next, run the following installation command:</p><pre class=\"ql-syntax\" spellcheck=\"false\">brew install mongodb-community@6.0\r\n</pre><blockquote><strong>Note</strong>: The version number following the <code>@</code> symbol may have changed. See the <a href=\"https://docs.mongodb.com/manual/tutorial/install-mongodb-on-os-x/#procedure\" rel=\"noopener noreferrer\" target=\"_blank\">MongoDB tutorial on installing on macOS</a> to make sure that you have the latest version to use with this command.</blockquote><h3>Run MongoDB as a Service on macOS</h3><p>To run MongoDB as a service on macOS, follow these steps:</p><p>Run the following command in your terminal:</p><pre class=\"ql-syntax\" spellcheck=\"false\">brew services start mongodb-community@6.0\r\n</pre><p>Verify that the service is running by using the following command:</p><pre class=\"ql-syntax\" spellcheck=\"false\">ps aux | grep -v grep | grep mongod\r\n</pre><p>If you don't see any output from the command above, try restarting the service by running the following command in your terminal:</p><pre class=\"ql-syntax\" spellcheck=\"false\">brew services restart mongodb-community\r\n</pre><h2>Install MongoDB Compass on Windows and macOS</h2><p>Now that you\u2019ve installed MongoDB, you are ready to install Compass. MongoDB Compass is a powerful graphic user interface (GUI) that allows you to query and visually explore a MongoDB database as well as use an embedded MongoDB shell.</p><p>Navigate to MongoDB Compass's <a href=\"https://docs.mongodb.com/compass/current/install/\" rel=\"noopener noreferrer\" target=\"_blank\">Download and Install Documentation</a> to download and install Compass for your machine.</p><p>Select your operating system and open the Downloads page.</p><p>On the Downloads page, select the most recent stable version that is compatible with your operating system and click on the Download button.</p><p>Follow instructions on your local machine to complete the download process and open Compass.</p><p><strong><em>Source: </em></strong><a href=\"https://coding-boot-camp.github.io/full-stack/mongodb/how-to-install-mongodb\" rel=\"noopener noreferrer\" target=\"_blank\"><em>The Coding Boot Camp</em></a></p>",
    "date_created": "2023-03-10 17:25:42",
    "date_modified": "2023-03-18 16:06:21",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/mongo-page.png",
    "image_alt": "Mongo database",
    "user_id": 3
  },
  {
    "id": 10,
    "title": "DAYS",
    "content": "<p>My first blog</p>",
    "date_created": "2023-03-20 00:05:02",
    "date_modified": "2023-03-20 00:05:02",
    "blog_image": "https://d16x0kpdjyglrc.cloudfront.net/mvctech/Abstract Colour Background Orange Simply beautiful iPhone wallpapers.jpg",
    "image_alt": "Abstract Colour Background Orange Simply beautiful iPhone wallpapers.jpg",
    "user_id": 8
  }
]